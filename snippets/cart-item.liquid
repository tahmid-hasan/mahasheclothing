
{% comment %} Wholesale_Hub_Item_Prices Start {% endcomment %}
{% if item.product %}{% assign base_product = item.product %}{% else %}{% assign base_product = item %}{% endif %}
{% if item.variant %}{% assign base_variant = item.variant %}{% else %}{% assign base_variant = item.selected_or_first_available_variant %}{% endif %}
{% assign WCNonFractionalCurrencies = "AFN, ALL, BIF, CLP, DJF, GNF, ISK, JPY, KMF, KRW, LAK, LBP, MGA, MMK, PYG, RSD, RWF, SLL, STD, UGX, VND, VUV, XAF, XOF, XPF, YER" | split: ", "%}

{% assign WCCartUsingNonFractionalCurrency = false %}
{% for non_fractional_currency in WCNonFractionalCurrencies %}
  {% if cart.currency.iso_code == non_fractional_currency %}
    {% assign WCCartUsingNonFractionalCurrency = true %}
  {% endif %}
{% endfor %}


{% assign WCCartUsingSecondaryMarketDiscount = false %}
{% unless shop.metafields.sawholesale.primary_market_id == blank %}
  {% if localization.market.id != shop.metafields.sawholesale.primary_market_id %}
    {% assign WCCartUsingSecondaryMarketDiscount = true %}
  {% endif %}
{% endunless%}

{% if shop.metafields.sawholesale['base_price'] == blank %}
  {% assign base_price = 'compare_at_price' %}
{% else %}
  {% assign base_price = shop.metafields.sawholesale['base_price'] %}
{% endif %}

{% assign saw_discount = 0 %}{% assign saw_has_discount = false %}

{% if customer.tags != blank and WCCartUsingSecondaryMarketDiscount == false %}
  {% for mf in base_product.metafields.sawholesale %}
    {% capture product_customer_tag %}{{ mf | first | replace: 'discount_', '' }}{% endcapture %}
    {% if customer.tags contains product_customer_tag %}
      {% assign saw_has_discount = true %}
      {% assign discount_key = product_customer_tag | prepend: 'discount_' %}
      {% assign price_key = product_customer_tag | prepend: 'price_' %}
      {% assign saw_discount = base_product.metafields.sawholesale[discount_key] | divided_by: 100.0 %}
    {% endif %}
  {% endfor %}
{% endif %}

{% if customer.tags != blank and WCCartUsingSecondaryMarketDiscount == true %}
  {% for collection in base_product.collections %}
    {% for discount in collection.metafields.sawholesale.discounts.value %}
      {% if customer.tags contains discount.tag %}
        {% assign saw_has_discount = true %}
        {% assign this_discount = discount.discount_percent | divided_by: 100.0 %}
        {% if this_discount > saw_discount %}{% assign saw_discount = this_discount %}{% endif %}
      {% endif %}
    {% endfor %}
  {% endfor %}
{% endif %}

{% comment %}
  Rather than calculating the percentage remaining after a discount the secondary
  markets logic uses the raw discount percentage to calculate the saw_variant_price
  For a 10% discount:
    In the primary market the saw_discount would be: 90%
    In the secondary market the saw_discount would be: 10%
{% endcomment %}
{% unless WCCartUsingSecondaryMarketDiscount %}
  {% assign saw_discount = 1 | minus: saw_discount %}
{% endunless %}

{% if WCCartUsingSecondaryMarketDiscount == true or base_price == 'price' or base_variant.compare_at_price == blank or base_variant.compare_at_price == 0 or base_variant.compare_at_price < base_variant.price %}
  {% assign saw_variant_compare_at_price = base_variant.price %}
{% else %}
  {% assign saw_variant_compare_at_price = base_variant.compare_at_price %}
{% endif %}

{% assign cpe = shop.metafields.sawholesale['cpe'] | default: "true" %}

{% if base_variant.metafields.sawholesale[price_key] != blank and cpe == "true" %}
  {% assign saw_variant_price = base_variant.metafields.sawholesale[price_key] %}
{% else %}
  {% comment %}
    For a 10% discount on a variant price of 100:
      In the primary market the saw_variant_price would be: 100 * 0.90 = 90
      In the secondary market the saw_variant_price would be: 100 * 0.10 = 10
      So saw_variant_price is not made available to the global scope in a secondary
      market. Doing so might cause strange behaviour if not properly accounted for.
  {% endcomment %}
  {% if WCCartUsingSecondaryMarketDiscount %}
    {% assign WCVariant_DiscountAmount = saw_variant_compare_at_price | times: saw_discount %}
  {% else %}
    {% assign saw_variant_price = saw_variant_compare_at_price | times: saw_discount %}
    {% assign WCVariant_DiscountAmount = 0 %}
  {% endif %}
{% endif %}
{% if WCCartUsingSecondaryMarketDiscount %}
  {% if WCCartUsingNonFractionalCurrency %}
    {% assign WCItem_DiscountAmount = WCVariant_DiscountAmount | times: item.quantity | round %}
  {% else %}
    {% assign WCItem_DiscountAmount = WCVariant_DiscountAmount | times: item.quantity | floor %}
  {% endif %}
  {% assign WCVariant_Price = saw_variant_compare_at_price %}
{% else %}
  {% comment %}
  For primary markets the discount has already been applied to the WCVariant_Price and it
  will be multiplied by the item quantity (if applicable).
  {% endcomment %}
  {% assign WCItem_DiscountAmount = 0 %}
  {% assign WCVariant_Price = saw_variant_price %}
{% endif %}

{% if saw_has_discount == false or saw_variant_price >= saw_variant_compare_at_price %}
  {% assign WCItem_OriginalPrice = item.original_price %}
  {% assign WCItem_FinalPrice = item.final_price %}
  {% assign WCItem_Price = item.price %}
  {% assign WCItem_PriceMin = item.price_min %}
  {% assign WCItem_PriceMax = item.price_max %}
  {% assign WCItem_CompareAtPrice = item.compare_at_price %}
  {% assign WCItem_CompareAtPriceMin = item.compare_at_price_min %}
  {% assign WCItem_CompareAtPriceMax = item.compare_at_price_max %}
  {% assign WCItem_OriginalLinePrice = item.original_line_price %}
  {% assign WCItem_FinalLinePrice = item.final_line_price %}
  {% assign WCItem_LinePrice = item.line_price %}
{% else %}
  {% assign WCItem_OriginalPrice = saw_variant_compare_at_price %}
  {% assign WCItem_FinalPrice = WCVariant_Price | minus: WCVariant_DiscountAmount %}
  {% assign WCItem_Price = WCVariant_Price %}
  {% assign WCItem_PriceMin = item.price_min | times: saw_discount %}
  {% assign WCItem_PriceMax = item.price_max | times: saw_discount %}
  {% assign WCItem_CompareAtPrice = saw_variant_compare_at_price %}
  {% if base_product.compare_at_price_min != 0 %}{% assign WCItem_CompareAtPriceMin = base_product.compare_at_price_min %}{% else %}{% assign WCItem_CompareAtPriceMin = base_product.price_min %}{% endif %}
  {% if base_product.compare_at_price_max != 0 %}{% assign WCItem_CompareAtPriceMax = base_product.compare_at_price_max %}{% else %}{% assign WCItem_CompareAtPriceMax = base_product.price_max %}{% endif %}
  {% assign WCItem_OriginalLinePrice = WCItem_OriginalPrice | round | times: item.quantity %}
  {% assign WCItem_FinalLinePrice = WCItem_Price | round | times: item.quantity | minus: WCItem_DiscountAmount %}
  {% assign WCItem_LinePrice = WCItem_OriginalPrice | round | times: item.quantity | minus: WCItem_DiscountAmount %}
{% endif %}
{% comment %} Wholesale_Hub_Item_Prices End {% endcomment %}
{%- comment -%}
  Parameters:
  - item {LineItem} - Cart line item.
  - forloop {forloop} - Cart line item for-loop iterator object.
  - drawer {boolean} [optional] - Is this line item in a drawer? (Default is false)
  - animate {boolean} [optional] - Apply page load animation to this item. (Default is false)

  Example usage:
  {% render 'cart-item', item: line_item, forloop: forloop, drawer: true, animate: true %}
{%- endcomment -%}

{%- liquid
  if drawer
    assign image_loading = 'manual'
  else
    assign image_loading = 'lazy'
  endif
-%}
<div class="cart-item product-{{ item.product.handle }}"{% if animate %}{%- render 'animation-attrs', attrs: 'data-cc-animate', always: true -%}{% endif %}>
  <div class="cart-item__column cart-item__image">
    <a href="{{ item.url }}">
      {%- render 'image', image: item.image, sizes: '100px', widths: '100, 200', loading: image_loading -%}
    </a>
  </div>

  <div class="cart-item__not-image">
    <div class="cart-item__column cart-item__description">
      <div class="lightly-spaced-row">
        <div class="cart-item__title">
          <a class="text-current" href="{{ item.url }}">{{ item.product.title | escape_once }}</a>
        </div>
        <div class="small-text">
          {%- liquid
            assign show_variants = false
            if item.product.variants.size > 1
              assign show_variants = true
            elsif settings.cart_item_show_single_variant and item.product.has_only_default_variant == false
              assign show_variants = true
            endif
          -%}
          {%- if show_variants -%}
            {%- for option in item.product.options -%}
              <div class="cart-item__variant">
                <span class="cart-item__variant-label">{{ option | escape_once }}:</span>
                <span class="cart-item__variant-value">{{ item.variant.options[forloop.index0] | escape_once }}</span>
              </div>
            {%- endfor -%}
          {%- endif -%}

          {%- for property in item.properties -%}
            {%- assign property_first_char = property.first | slice: 0 -%}
            {% if property.last != blank and property_first_char != '_' %}
              <div class="line-item-property">
                <span class="line-item-property__label">{{ property.first | escape_once }}:</span>
                <span class="line-item-property__value">
                  {%- if property.last contains '/uploads/' -%}
                    <a href="{{ property.last }}">{{ property.last | split: '/' | last }}</a>
                  {%- else -%}
                    {{- property.last | escape_once -}}
                  {%- endif -%}
                </span>
              </div>
            {% endif %}
          {%- endfor -%}

          {% if item.selling_plan_allocation %}
            <div class="subscription-description">{{ item.selling_plan_allocation.selling_plan.name | escape_once }}</div>
          {% endif %}

          {% if section.settings.show_backorder_text == true %}
            {% render 'backorder', product: item.product, variant: item.variant %}
          {% endif %}

          {% if settings.prod_pre_order_label_show and item.product.template_suffix contains 'preorder' %}
            <div class="price-label price-label--preorder">{{ 'products.product.preorder' | t }}</div>
          {% endif %}
        </div>

        {%- if item.variant.inventory_management != blank and item.variant.inventory_quantity > 0 and section.settings.show_inventory_notice != 'never' -%}
          {%- if section.settings.show_inventory_notice == 'always' or item.variant.inventory_quantity <= section.settings.inventory_threshold -%}
            {%- liquid
              assign show_inventory_count = false
              if section.settings.show_inventory_count == 'always'
                assign show_inventory_count = true
              endif
              if section.settings.show_inventory_count == 'low' and item.variant.inventory_quantity <= section.settings.inventory_threshold
                assign show_inventory_count = true
              endif

              if show_inventory_count
                if item.variant.inventory_quantity <= section.settings.inventory_threshold
                  assign notice = 'products.inventory.only_x_left' | t: quantity: item.variant.inventory_quantity
                else
                  assign notice = 'products.inventory.x_left' | t: quantity: item.variant.inventory_quantity
                endif
              else
                if item.variant.inventory_quantity <= section.settings.inventory_threshold
                  assign notice = 'products.inventory.low_stock' | t
                else
                  assign notice = 'products.inventory.in_stock' | t
                endif
              endif
            -%}
            <div class="very-lightly-spaced-row">
              <div class="product-info-block product-inventory product-inventory--small product-inventory--{% if item.variant.inventory_quantity <= section.settings.inventory_threshold %}low{% else %}ok{% endif %}">
                {{- notice -}}
              </div>
            </div>
          {%- endif -%}
        {%- endif -%}
      </div>
    </div>


    <div class="cart-item__column cart-item__price">
      <span class="theme-money cart-item__selling-price">{{ WCItem_FinalPrice | money }}</span>
      {% if WCItem_CompareAtPrice > WCItem_Price %}
        <span class="struck-out-price small-text"><span class="theme-money">{{ WCItem_CompareAtPrice | money }}</span></span>
      {% elsif WCItem_OriginalLinePrice > WCItem_FinalLinePrice %}
        <span class="struck-out-price small-text"><span class="theme-money">{{ WCItem_OriginalPrice | money }}</span></span>
      {% endif %}

      {% render 'unit-price', variant: item %}

      {%- unless drawer -%}
        {{- line_item_discounts -}}
      {%- endunless -%}
    </div>

    {% liquid
      if item.variant.inventory_management != blank and item.variant.inventory_policy == 'deny'
        assign quantity = item.quantity | at_most: item.variant.inventory_quantity | at_least: 1
      else
        assign quantity = item.quantity | at_least: 1
      endif

      if item.variant.inventory_management != blank and item.variant.inventory_policy == 'deny' and item.variant.inventory_quantity <= quantity
        assign can_increase = false
      else
        assign can_increase = true
      endif
    %}
    <div class="cart-item__column cart-item__quantity">
      <div class="quantity buttoned-input">
        <a id="updates_dec_{{ forloop.index }}" class="quantity-down" href="{{ routes.cart_change_url }}?id={{ item.key }}&quantity={{ quantity | minus: 1 }}" aria-label="{{ 'cart.items.decrease_quantity' | t | escape }}">{% render 'icon-minus' %}</a>
        <input
          class="cart-item__quantity-input"
          type="number"
          id="updates_{{ forloop.index }}"
          name="updates[]"
          data-initial-value="{{ quantity }}"
          data-key="{{ item.key }}"
          min="0"
          {% if item.variant.inventory_management != blank and item.variant.inventory_policy == 'deny' and item.variant.inventory_quantity > 0 %}
            max="{{ item.variant.inventory_quantity }}"
            value="{{ quantity }}"
          {% else %}
            value="{{ quantity }}"
          {% endif %}
          aria-label="{{ 'cart.items.quantity' | t | escape }}" />
        <a id="updates_inc_{{ forloop.index }}" class="quantity-up {% unless can_increase %}unusable{% endunless %}" href="{{ routes.cart_change_url }}?id={{ item.key }}&quantity={{ quantity | plus: 1 }}" aria-label="{{ 'cart.items.increase_quantity' | t | escape }}">{% render 'icon-plus' %}</a>
      </div>
      <a class="cart-item__remove small-text underline" href="{{ routes.cart_change_url }}?id={{ item.key }}&quantity=0">
        {{- 'cart.items.remove' | t -}}
      </a>
    </div>

    {%- unless drawer -%}
      <div class="cart-item__column cart-item__total">
        <span class="theme-money cart-item__selling-total">{{ WCItem_FinalLinePrice | money }}</span>
        {% if WCItem_CompareAtPrice > WCItem_Price %}
          <div class="theme-money struck-out-price small-text">{{ WCItem_CompareAtPrice | times: item.quantity | money }}</div>
        {% elsif WCItem_OriginalLinePrice != WCItem_FinalLinePrice %}
          <div class="theme-money struck-out-price small-text">{{ WCItem_OriginalLinePrice | money }}</div>
        {% endif %}
      </div>
    {%- endunless -%}

    {% if WCItem_OriginalPrice != WCItem_FinalPrice %}
      <div class="cart-item__item-discounts">
        <ul class="cart-discount-list">
        {% for discount_allocation in item.line_level_discount_allocations %}
          <li class="cart-discount cart-discount--inline">
            <span class="cart-discount__label">
                <span class="cart-discount__icon">{% render 'icon-label' %}</span>
                <span class="cart-discount__title">{{ discount_allocation.discount_application.title | escape_once }}</span>
            </span>
            <span class="cart-discount__amount theme-money">{{ discount_allocation.amount | money }}</span>
          </li>
        {% endfor %}
        </ul>
      </div>
    {% endif %}
  </div>
</div>

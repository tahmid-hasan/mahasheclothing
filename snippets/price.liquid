
{% comment %} Wholesale_Hub_Product_Prices Start {% endcomment %}
{% assign base_product = product %}
{% assign base_variant = product.selected_or_first_available_variant %}
{% assign WCNonFractionalCurrencies = "AFN, ALL, BIF, CLP, DJF, GNF, ISK, JPY, KMF, KRW, LAK, LBP, MGA, MMK, PYG, RSD, RWF, SLL, STD, UGX, VND, VUV, XAF, XOF, XPF, YER" | split: ", "%}

{% assign WCCartUsingNonFractionalCurrency = false %}
{% for non_fractional_currency in WCNonFractionalCurrencies %}
{%- comment -%} Wholesale_Hub_Product_Visibility_For_Loop Start {%- endcomment -%}
{%- capture hide_resource -%}{% render "orbit_wholesale_product_visibility", resource: non_fractional_currency %}{%- endcapture -%}
{%- if hide_resource == "true" -%}
  {% continue %}
{%- endif -%}
{%- comment -%} Wholesale_Hub_Product_Visibility_For_Loop End {%- endcomment -%}

  {% if cart.currency.iso_code == non_fractional_currency %}
    {% assign WCCartUsingNonFractionalCurrency = true %}
  {% endif %}
{% endfor %}


{% assign WCCartUsingSecondaryMarketDiscount = false %}
{% unless shop.metafields.sawholesale.primary_market_id == blank %}
  {% if localization.market.id != shop.metafields.sawholesale.primary_market_id %}
    {% assign WCCartUsingSecondaryMarketDiscount = true %}
  {% endif %}
{% endunless%}

{% if shop.metafields.sawholesale['base_price'] == blank %}
  {% assign base_price = 'compare_at_price' %}
{% else %}
  {% assign base_price = shop.metafields.sawholesale['base_price'] %}
{% endif %}

{% assign saw_discount = 0 %}{% assign saw_has_discount = false %}

{% if customer.tags != blank and WCCartUsingSecondaryMarketDiscount == false %}
  {% for mf in base_product.metafields.sawholesale %}
{%- comment -%} Wholesale_Hub_Product_Visibility_For_Loop Start {%- endcomment -%}
{%- capture hide_resource -%}{% render "orbit_wholesale_product_visibility", resource: mf %}{%- endcapture -%}
{%- if hide_resource == "true" -%}
  {% continue %}
{%- endif -%}
{%- comment -%} Wholesale_Hub_Product_Visibility_For_Loop End {%- endcomment -%}

    {% capture product_customer_tag %}{{ mf | first | replace: 'discount_', '' }}{% endcapture %}
    {% if customer.tags contains product_customer_tag %}
      {% assign saw_has_discount = true %}
      {% assign discount_key = product_customer_tag | prepend: 'discount_' %}
      {% assign price_key = product_customer_tag | prepend: 'price_' %}
      {% assign saw_discount = base_product.metafields.sawholesale[discount_key] | divided_by: 100.0 %}
    {% endif %}
  {% endfor %}
{% endif %}

{% if customer.tags != blank and WCCartUsingSecondaryMarketDiscount == true %}
  {% for collection in base_product.collections %}
{%- comment -%} Wholesale_Hub_Product_Visibility_For_Loop Start {%- endcomment -%}
{%- capture hide_resource -%}{% render "orbit_wholesale_product_visibility", resource: collection %}{%- endcapture -%}
{%- if hide_resource == "true" -%}
  {% continue %}
{%- endif -%}
{%- comment -%} Wholesale_Hub_Product_Visibility_For_Loop End {%- endcomment -%}

    {% for discount in collection.metafields.sawholesale.discounts.value %}
{%- comment -%} Wholesale_Hub_Product_Visibility_For_Loop Start {%- endcomment -%}
{%- capture hide_resource -%}{% render "orbit_wholesale_product_visibility", resource: discount %}{%- endcapture -%}
{%- if hide_resource == "true" -%}
  {% continue %}
{%- endif -%}
{%- comment -%} Wholesale_Hub_Product_Visibility_For_Loop End {%- endcomment -%}

      {% if customer.tags contains discount.tag %}
        {% assign saw_has_discount = true %}
        {% assign this_discount = discount.discount_percent | divided_by: 100.0 %}
        {% if this_discount > saw_discount %}{% assign saw_discount = this_discount %}{% endif %}
      {% endif %}
    {% endfor %}
  {% endfor %}
{% endif %}

{% comment %}
  Rather than calculating the percentage remaining after a discount the secondary
  markets logic uses the raw discount percentage to calculate the saw_variant_price
  For a 10% discount:
    In the primary market the saw_discount would be: 90%
    In the secondary market the saw_discount would be: 10%
{% endcomment %}
{% unless WCCartUsingSecondaryMarketDiscount %}
  {% assign saw_discount = 1 | minus: saw_discount %}
{% endunless %}

{% if WCCartUsingSecondaryMarketDiscount == true or base_price == 'price' or base_variant.compare_at_price == blank or base_variant.compare_at_price == 0 or base_variant.compare_at_price < base_variant.price %}
  {% assign saw_variant_compare_at_price = base_variant.price %}
{% else %}
  {% assign saw_variant_compare_at_price = base_variant.compare_at_price %}
{% endif %}

{% assign cpe = shop.metafields.sawholesale['cpe'] | default: "true" %}

{% if base_variant.metafields.sawholesale[price_key] != blank and cpe == "true" %}
  {% assign saw_variant_price = base_variant.metafields.sawholesale[price_key] %}
{% else %}
  {% comment %}
    For a 10% discount on a variant price of 100:
      In the primary market the saw_variant_price would be: 100 * 0.90 = 90
      In the secondary market the saw_variant_price would be: 100 * 0.10 = 10
      So saw_variant_price is not made available to the global scope in a secondary
      market. Doing so might cause strange behaviour if not properly accounted for.
  {% endcomment %}
  {% if WCCartUsingSecondaryMarketDiscount %}
    {% assign WCVariant_DiscountAmount = saw_variant_compare_at_price | times: saw_discount %}
  {% else %}
    {% assign saw_variant_price = saw_variant_compare_at_price | times: saw_discount %}
    {% assign WCVariant_DiscountAmount = 0 %}
  {% endif %}
{% endif %}
{% if WCCartUsingSecondaryMarketDiscount %}
  {% assign WCVariant_Price = saw_variant_compare_at_price %}
{% else %}
  {% assign WCVariant_Price = saw_variant_price %}
{% endif %}

{% if saw_has_discount == false or saw_variant_price >= saw_variant_compare_at_price %}
  {% assign WCProduct_Price = base_product.price %}
  {% assign WCProduct_ComparePrice = base_product.compare_at_price %}
  {% assign WCProduct_PriceMin = base_product.price_min %}
  {% assign WCProduct_ComparePriceMin = base_product.compare_at_price_min %}
  {% assign WCProduct_PriceMax = base_product.price_max %}
  {% assign WCProduct_ComparePriceMax = base_product.compare_at_price_max %}
  {% assign WCProduct_VariantPrice = base_variant.price %}
  {% assign WCProduct_VariantComparePrice = base_variant.compare_at_price %}
{% else %}
  {% assign WCProduct_Price =  WCVariant_Price | minus: WCVariant_DiscountAmount %}
  {% assign WCProduct_PriceMin = base_product.price_min | times: saw_discount %}
  {% assign WCProduct_PriceMax = base_product.price_max | times: saw_discount %}
  {% assign WCProduct_ComparePrice = saw_variant_compare_at_price %}
  {% if base_product.compare_at_price_min != 0 %}{% assign WCProduct_ComparePriceMin = base_product.compare_at_price_min %}{% else %}{% assign WCProduct_ComparePriceMin = base_product.price_min %}{% endif %}
  {% if base_product.compare_at_price_max != 0 %}{% assign WCProduct_ComparePriceMax = base_product.compare_at_price_max %}{% else %}{% assign WCProduct_ComparePriceMax = base_product.price_max %}{% endif %}
  {% assign WCProduct_VariantPrice = WCVariant_Price | minus: WCVariant_DiscountAmount %}
  {% assign WCProduct_VariantComparePrice = saw_variant_compare_at_price %}
{% endif %}
{% comment %} Wholesale_Hub_Product_Prices End {% endcomment %}
{% comment %}
  Parameters:
  - product {Object} - Product object.
  - show_currency_code {Boolean} - Use 'money_with_currency' instead of 'money'.
  - show_labels {Boolean} - Show Sale/Sold Out labels (optional, default is false).
  - for_variant_picker {Boolean} - Uses variant price and markup for display of all variant states (optional, default is false).
  - current_variant {Object} - Current variant, if for_variant_picker is true.

  Usage:
  {% render 'price', product: product %}
{% endcomment %}

{%- liquid
  assign variant = current_variant | default: product.variants | sort: 'price' | first

  if for_variant_picker
    if current_variant == false
      assign available = true
    endif
  else
    assign for_variant_picker = false
    assign available = variant.available | default: false
  endif

  assign compare_at_price = WCProduct_VariantComparePrice
  assign price = WCProduct_VariantPrice | default: 1999
-%}

<div class="price{%- if compare_at_price > price %} price--on-sale{% endif -%}
                 {%- if available == false %} price--sold-out{% endif -%}">
  <div class="price__default">
    {%- if product.price_varies -%}
      {%- if for_variant_picker == false -%}
        <span class="price__from">{{ 'products.product.from' | t }}</span>
      {%- elsif for_variant_picker and current_variant == false -%}
        <span class="price__from">{{ 'products.product.from' | t }}</span>
      {%- endif -%}
    {%- endif %}
    <span class="price__current">
      {%- if show_currency_code -%}
        {{ price | money_with_currency }}
      {%- else -%}
        {{ price | money }}
      {%- endif -%}
    </span>
    {% if for_variant_picker or compare_at_price > price -%}
      <span class="price__was">
        {%- if compare_at_price > price -%}
          {{- compare_at_price | money -}}
        {%- endif -%}
      </span>
    {%- endif -%}
  </div>

  {% if show_labels %}
    {% if settings.prod_sold_out_show and product.available == false %}
      <span class="price-label price-label--sold-out">{{ 'products.product.sold_out' | t }}</span>
    {% elsif settings.prod_pre_order_label_show and product.template_suffix contains 'preorder' %}
      <span class="price-label price-label--preorder">{{ 'products.product.preorder' | t }}</span>
    {% elsif settings.prod_sale_show and WCProduct_VariantComparePrice > WCProduct_VariantPrice %}
      <span class="price-label price-label--sale">{{ 'products.product.sale' | t }}</span>
    {% endif %}
  {% endif %}

  {% if for_variant_picker or variant.unit_price_measurement %}
    <div class="unit-price"{% if variant.unit_price_measurement == nil %} hidden{% endif %}>
      <span class="visually-hidden">{{ 'products.product.price.unit_price' | t }}</span>
      <span class="unit-price__price">{{ variant.unit_price | money }}</span>
      <span class="unit-price__separator">{{ 'products.product.price.unit_price_separator' | t }}</span>
      <span class="unit-price__unit">
        {%- if variant.unit_price_measurement.reference_value != 1 -%}
          {{- variant.unit_price_measurement.reference_value -}}
        {%- endif -%}
        {{ variant.unit_price_measurement.reference_unit }}
      </span>
    </div>
  {% endif %}

  {% if for_variant_picker %}
    <div class="price__no-variant" hidden>
      <strong class="price__current">{{ 'products.variant.non_existent' | t }}</strong>
    </div>
  {% endif %}
</div>
